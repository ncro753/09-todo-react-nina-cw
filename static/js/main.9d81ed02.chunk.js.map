{"version":3,"sources":["AddNew.js","Todo.js","TodoList.js","App.js","index.js"],"names":["AddNew","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addTodo","bind","assertThisInitialized","event","preventDefault","eventText","document","getElementById","value","makeTodo","react_default","a","createElement","id","onSubmit","type","placeholder","onClick","sortTodos","onKeyDown","handleKeyDown","Component","Todo","state","checked","checkTodo","deleteTodoDo","style","textDecoration","console","log","self","xhttp2","XMLHttpRequest","onreadystatechange","readyState","status","updateToDo","responseText","open","setRequestHeader","send","data","completed","target","JSON","stringify","className","onChange","text","TodoList","App","todos","xhttp","parse","setState","sortItems","sort","b","localeCompare","todoText","_this2","src_AddNew","map","todo","src_Todo","key","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.9d81ed02.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\n// function AddNew({setInputTxt, todoItems, setTodoItems, inputTxt}){\n//     const inputTextDo = (t) => {\n//         console.log(t.target.value);\n//         setInputTxt(t.target.value);\n//     };\n\n//     const submitTextDo = (t) => {\n//         t.preventDefault();\n//         setTodoItems([\n//             ...todoItems, {text: inputTxt, completed: false, id: Math.random()*100, user:\"124b10-d2cdcf-95e1c5-67d7bf-35b4b9\"}\n//         ]);\n//         setInputTxt(\"\");\n//     };\n\nclass AddNew extends Component {\n    constructor(props) {\n        super(props);\n        this.addTodo = this.addTodo.bind(this);\n    };\n\n    addTodo(event) {\n        event.preventDefault();\n        const thisObject = this;\n        const eventText = document.getElementById(\"newToDo\").value;\n        \n        thisObject.props.makeTodo(eventText);\n\n        document.getElementById(\"newToDo\").value = \"\";\n    }\n\n    render(){\n        return (\n            <span>\n            <form id=\"addNew\" onSubmit={this.addTodo}>\n                <input  \n                    type=\"text\" id=\"newToDo\" \n                    placeholder=\"add a new item\">\n                </input>\n                <button id=\"button\"> + </button>\n                <button type=\"button\" onClick={this.props.sortTodos} onKeyDown={this.handleKeyDown} id=\"sort\"> sort </button>\n            </form>\n            </span>\n        );\n    }\n    }\n\nexport default AddNew;","import React, { Component } from 'react';\nimport './App.css';\n\nimport App from './App'\nimport AddNew from './AddNew';\n\nclass Todo extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            checked: this.props.checked\n        }\n\n        this.checkTodo = this.checkTodo.bind(this);\n        this.deleteTodoDo = this.deleteTodoDo.bind(this);\n    }\n\n    componentDidUpdate() {\n        if (this.props.checked) {\n            document.getElementById(this.props.id).style.textDecoration = \"line-through\";\n        } else {\n            document.getElementById(this.props.id).style.textDecoration = \"none\";\n        }\n        console.log(this.props.checked);\n    }\n\n// function Todo({text, setTodoItems, todoItems, todo}){\n\n    // const deleteTodoDo = () => {\n        // console.log(todo)\n    // };\n\n//     const completeDo = () => {\n//         setTodoItems(todoItems.map(item)) = () => {\n//             if(item.id === todo.id){}\n//         }\n\n    deleteTodoDo(event) {\n        var id = this.props.id;\n        var self = this;\n\n        //document.getElementById(id).remove();\n        // Initalize AJAX Request\n        var xhttp2 = new XMLHttpRequest();\n\n        // Response handler\n        xhttp2.onreadystatechange = function() {\n            // Wait for readyState = 4 & 200 response\n            if (this.readyState == 4 && this.status == 200) {\n                // document.getElementById(id).remove();\n                // parse JSON response\n\n                //ToDoList();\n                self.props.updateToDo();\n                 \n            } else if (this.readyState == 4) {\n\n                // this.status !== 200, error from server\n                console.log(this.responseText);\n                console.log(\"this item tried to be deleted and failed\");\n            }\n        };\n\n        xhttp2.open(\"DELETE\", \"https://cse204.work/todos/\"+id, true);\n\n        xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n        xhttp2.setRequestHeader(\"x-api-key\", \"022d4d-8b8c34-099402-451891-dc956a\");\n        xhttp2.send();\n    }\n\n    checkTodo(event) {\n        var self = this;\n        var id = this.props.id;\n        const data = {\n            completed: event.target.checked\n        }\n        // Initalize AJAX Request\n        var xhttp2 = new XMLHttpRequest();\n        // Response handler\n        xhttp2.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200) {\n                //ToDoList();\n\n                event.target.style.textDecoration = \"line-through\";\n                self.props.updateToDo();\n            } \n            else if (this.readyState == 4) {\n                // this.status !== 200, error from server\n                console.log(this.responseText);\n            }\n        }\n\n        xhttp2.open(\"PUT\", \"https://cse204.work/todos/\"+id);\n\n        xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n        xhttp2.setRequestHeader(\"x-api-key\", \"022d4d-8b8c34-099402-451891-dc956a\");\n        xhttp2.send(JSON.stringify(data));\n    }\n\n    render() {\n        return (\n            <div className=\"todo\">\n                <input type=\"checkbox\" className='' onChange={this.checkTodo}></input>\n                <div className=\"todo-item\" id={this.props.id}>{this.props.text}</div>\n                <button className='trash-btn' onClick={this.deleteTodoDo}> x </button>\n            </div>\n        );\n    }\n}\n\nexport default Todo;","import React, {  } from 'react';\n\nimport Todo from './Todo';\n\nfunction TodoList({ todoItems, setTodoItems }){\n\n console.log(todoItems);\n    return (\n        <div id=\"todoContainer\">\n            <ul id=\"todoListed\">\n             {todoItems.map((todo) =>(\n               <Todo \n                setTodoItems={setTodoItems} \n                todoItems={todoItems} \n                key={todo.id} \n                text={todo.text}\n                todo={todo}/>\n             ))}\n            </ul>\n       </div>\n    );\n  }\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport reactDom from 'react-dom';\nimport './App.css';\n\n//components\nimport AddNew from './AddNew';\nimport Todo from './Todo';\nimport TodoList from './TodoList';\n\n\n// function App() {\n// const [inputTxt, setInputTxt] = useState(\" \");\n// const [todoItems, setTodoItems] = useState([]);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: []\n    }\n\n    this.makeTodo = this.makeTodo.bind(this);\n    this.updateToDo = this.updateToDo.bind(this);\n    this.sortTodos = this.sortTodos.bind(this);\n   \n  };\n\n  updateToDo() {\n    const self = this;\n    var xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = function() {\n      if (this.readyState == 4 && this.status == 200) {\n        var todos = JSON.parse(this.responseText);\n        console.log(todos);\n        self.setState({\n          todos: todos\n        });\n      };\n    };\n    \n    xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n    xhttp.setRequestHeader(\"x-api-key\",\"022d4d-8b8c34-099402-451891-dc956a\");\n    xhttp.send();\n  };\n\n  componentDidMount() {\n    this.updateToDo();\n  }\n\n  sortTodos() {\n    const sortItems= this.state.todos;\n    sortItems.sort(function (a, b) {\n    return a.text.localeCompare(b.text);\n  })\n    this.setState({todos: sortItems});\n  }\n\n  \n\n  // componentWillUnmount(){\n  //   //document.removeEventListener(\"click\", deleteTodoDo);\n  // };\n\n\n  display(todos) {\n\n  }\n\n  makeTodo(todoText) {\n    var data = { //change some text to html referred to\n      text: todoText,\n    };\n    var self = this;\n\n    // Initalize AJAX Request\n    var xhttp2 = new XMLHttpRequest();\n\n    // Response handler\n    xhttp2.onreadystatechange = function() {\n      // Wait for readyState = 4 & 200 response\n      if (this.readyState == 4 && this.status == 200) {\n          // parse JSON response\n          var todo = JSON.parse(this.responseText);\n          self.updateToDo();\n      } else if (this.readyState == 4) {\n          // this.status !== 200, error from server\n          console.log(this.responseText);\n      }\n    }\n\n    xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\n\n    xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n    xhttp2.setRequestHeader(\"x-api-key\", \"022d4d-8b8c34-099402-451891-dc956a\");\n    xhttp2.send(JSON.stringify(data));\n\n  }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n            <h1> My <em>TO DO</em> List</h1>\n        </header>\n        <AddNew updateToDo={this.updateToDo} makeTodo={this.makeTodo} sortTodos={this.sortTodos}/>\n        {this.state.todos.map((todo) => <Todo updateToDo={this.updateToDo} key={todo.id} id={todo.id} text = {todo.text} checked={todo.completed}/>)}\n      </div>\n    );\n  };\n}\n \n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}